version: 2.1
executors:
  vm:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/surleboutdesdoigts
    
jobs:
  build:
    executor: vm
    steps:
      - checkout
      
      - run: 
          name: install node@10.16.3
          command: |
               set +e         
               touch $BASH_ENV    
               curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
               echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
               echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
               echo 'nvm install 10.16.3' >> $BASH_ENV
               echo 'nvm alias default 10.16.3' >> $BASH_ENV

      - run: 
          name: install npm@6.4.0
          command: |
               npm install npm@6.4.0 -g

      - run:
          name: verify node version and npm version
          command: |
               node --version
               npm --version

      - run:
          name: install hexo-cli and node modules from package.json
          command: |
              npm install hexo-cli -g
              npm install

      - run: 
          name: clean and generate build artifact
          command: |
              hexo clean
              hexo generate

      - run:
          name: compress artifact
          command: |
              mkdir release
              tar -zcvf surleboutdesdoigts_v$(cat version).tar.gz public
              mv surleboutdesdoigts_v$(cat version).tar.gz release
              cp version release
              ls -l release

      - persist_to_workspace:
          root: ~/surleboutdesdoigts
          paths:
            - release

  deploy:
    executor: vm
    steps:
      - run:
          name: stage artifact
          command: |
              scp release/surleboutdesdoigts_v$(cat version).tar.gz $SSH_USER@$SSH_HOST:/tmp

      - run:
          name: deploy staged artifact
          command: |
              ssh $SSH_USER@$SSH_HOST "./publish_surleboutdesdoigts.sh"

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master